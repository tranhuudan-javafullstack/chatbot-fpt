{"ast":null,"code":"import { ApiConstants } from \"../utils/Constants\";\nexport const getKnowledges = async accessToken => {\n  try {\n    const res = await fetch(`http://localhost:8068/api/v1/users/knowledges`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${accessToken}`\n      }\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(`${data.detail}`);\n    } else {\n      return data;\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport const createKnowledge = async (name, description, authToken) => {\n  try {\n    const res = await fetch(ApiConstants.knowledges, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        \"name\": name,\n        \"description\": description\n      })\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(`${data.detail}`);\n    } else {\n      return data;\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateKnowledge = async (knowledgeId, name, description, authToken) => {\n  try {\n    const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        \"name\": name,\n        \"description\": description\n      })\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(`${data.detail}`);\n    } else {\n      return data;\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteKnowledge = async (knowledgeId, authToken) => {\n  try {\n    const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${authToken}`\n      }\n    });\n    // const data = await res.json();\n    if (res.status !== 204) {\n      throw new Error(`ERROR`);\n    } else {\n      return \"SUCCESSFUL\";\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport const addFileToKnowledge = async (files, knowledgeId, accessToken) => {\n  try {\n    const formData = new FormData();\n    Array.from(files).forEach((file, index) => {\n      formData.append('files', file);\n    });\n    const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}/files`, {\n      method: \"POST\",\n      headers: {\n        authorization: `Bearer ${accessToken}`\n      },\n      body: formData\n    });\n    if (res.status != 201) {\n      throw new Error(`ERROR`);\n    } else {\n      return \"SUCCESSFUL\";\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteFileFromKnowledge = async (fileId, knowledgeId, accessToken) => {\n  try {\n    const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}/files/${fileId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${accessToken}`\n      }\n    });\n    if (res.status === 422) {\n      const data = await res.json();\n      throw new Error(`${data.detail[0].msg}`);\n    }\n    if (res.status != 204) {\n      throw new Error(`ERROR`);\n    } else {\n      return \"SUCCESSFUL\";\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getFilesKnowledge = async (accessToken, knowledgeId) => {\n  try {\n    const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${accessToken}`\n      }\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(`${data.detail}`);\n    } else {\n      return data;\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getDetailFilesKnowledge = async (accessToken, knowledgeId, fileId) => {\n  try {\n    const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}/files/${fileId}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${accessToken}`\n      }\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(`${data.detail}`);\n    } else {\n      return data;\n    }\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["ApiConstants","getKnowledges","accessToken","res","fetch","method","headers","authorization","data","json","ok","Error","detail","error","createKnowledge","name","description","authToken","knowledges","body","JSON","stringify","updateKnowledge","knowledgeId","deleteKnowledge","status","addFileToKnowledge","files","formData","FormData","Array","from","forEach","file","index","append","deleteFileFromKnowledge","fileId","msg","getFilesKnowledge","getDetailFilesKnowledge"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/services/KnowledgeService.js"],"sourcesContent":["import {ApiConstants} from \"../utils/Constants\";\n\nexport const getKnowledges = async (accessToken) => {\n    try {\n        const res = await fetch(`http://localhost:8068/api/v1/users/knowledges`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const createKnowledge = async (name, description, authToken) => {\n    try {\n        const res = await fetch(ApiConstants.knowledges, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify({\n                \"name\": name,\n                \"description\": description,\n            })\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const updateKnowledge = async (knowledgeId,name, description, authToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify({\n                \"name\": name,\n                \"description\": description,\n            })\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const deleteKnowledge = async (knowledgeId, authToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n        });\n        // const data = await res.json();\n        if(res.status !== 204){\n            throw new Error(`ERROR`);\n        }else{\n            return \"SUCCESSFUL\";\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const addFileToKnowledge = async (files,knowledgeId, accessToken) => {\n    try {\n        const formData = new FormData();\n        Array.from(files).forEach((file, index) => {\n            formData.append('files', file);\n        });\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}/files`, {\n            method: \"POST\",\n            headers: {\n                authorization: `Bearer ${accessToken}`,\n            },\n            body: formData,\n        });\n        if (res.status != 201) {\n            throw new Error(`ERROR`);\n        } else {\n            return \"SUCCESSFUL\";\n        }\n    } catch (error) {\n        throw error;\n    }\n}\nexport const deleteFileFromKnowledge = async (fileId,knowledgeId, accessToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}/files/${fileId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        if(res.status === 422){\n            const data = await res.json();\n            throw new Error(`${data.detail[0].msg}`);\n        }\n        if(res.status != 204){\n            throw new Error(`ERROR`);\n        }else{\n            return \"SUCCESSFUL\";\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const getFilesKnowledge = async (accessToken, knowledgeId) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const getDetailFilesKnowledge = async (accessToken, knowledgeId, fileId) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}/files/${fileId}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}