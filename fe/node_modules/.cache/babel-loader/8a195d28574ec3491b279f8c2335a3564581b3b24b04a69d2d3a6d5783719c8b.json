{"ast":null,"code":"import CryptoJS from 'crypto-js';\nconst secretKey = process.env.REACT_APP_SECRET_KEY;\nexport const encryptToken = token => {\n  return CryptoJS.AES.encrypt(token, secretKey).toString();\n};\nexport const decryptToken = encryptedToken => {\n  const bytes = CryptoJS.AES.decrypt(encryptedToken, secretKey);\n  return bytes.toString(CryptoJS.enc.Utf8);\n};\nexport function getDateFromTimestamp(timestamp) {\n  const date = new Date(timestamp);\n  const day = date.getDate();\n  const month = date.getMonth() + 1; // Tháng trong JavaScript bắt đầu từ 0, nên cần +1\n  const year = date.getFullYear();\n  return `${day}/${month}/${year}`;\n}\nexport function formatBytes(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}","map":{"version":3,"names":["CryptoJS","secretKey","process","env","REACT_APP_SECRET_KEY","encryptToken","token","AES","encrypt","toString","decryptToken","encryptedToken","bytes","decrypt","enc","Utf8","getDateFromTimestamp","timestamp","date","Date","day","getDate","month","getMonth","year","getFullYear","formatBytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/utils/Functions.js"],"sourcesContent":["import CryptoJS from 'crypto-js';\n\nconst secretKey = process.env.REACT_APP_SECRET_KEY;\nexport const encryptToken = (token) => {\n    return CryptoJS.AES.encrypt(token, secretKey).toString();\n};\nexport const decryptToken = (encryptedToken) => {\n    const bytes = CryptoJS.AES.decrypt(encryptedToken, secretKey);\n    return bytes.toString(CryptoJS.enc.Utf8);\n};\nexport function getDateFromTimestamp(timestamp) {\n    const date = new Date(timestamp);\n    const day = date.getDate();\n    const month = date.getMonth() + 1; // Tháng trong JavaScript bắt đầu từ 0, nên cần +1\n    const year = date.getFullYear();\n\n    return `${day}/${month}/${year}`;\n}\nexport function formatBytes(bytes) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,WAAW;AAEhC,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,oBAAoB;AAClD,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACnC,OAAON,QAAQ,CAACO,GAAG,CAACC,OAAO,CAACF,KAAK,EAAEL,SAAS,CAAC,CAACQ,QAAQ,CAAC,CAAC;AAC5D,CAAC;AACD,OAAO,MAAMC,YAAY,GAAIC,cAAc,IAAK;EAC5C,MAAMC,KAAK,GAAGZ,QAAQ,CAACO,GAAG,CAACM,OAAO,CAACF,cAAc,EAAEV,SAAS,CAAC;EAC7D,OAAOW,KAAK,CAACH,QAAQ,CAACT,QAAQ,CAACc,GAAG,CAACC,IAAI,CAAC;AAC5C,CAAC;AACD,OAAO,SAASC,oBAAoBA,CAACC,SAAS,EAAE;EAC5C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EAChC,MAAMG,GAAG,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC;EAC1B,MAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACnC,MAAMC,IAAI,GAAGN,IAAI,CAACO,WAAW,CAAC,CAAC;EAE/B,OAAO,GAAGL,GAAG,IAAIE,KAAK,IAAIE,IAAI,EAAE;AACpC;AACA,OAAO,SAASE,WAAWA,CAACd,KAAK,EAAE;EAC/B,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;EAEjC,MAAMe,CAAC,GAAG,IAAI;EACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EAC/C,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACpB,KAAK,CAAC,GAAGkB,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC;EAEnD,OAAOM,UAAU,CAAC,CAACrB,KAAK,GAAGkB,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGP,KAAK,CAACC,CAAC,CAAC;AAC3E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}