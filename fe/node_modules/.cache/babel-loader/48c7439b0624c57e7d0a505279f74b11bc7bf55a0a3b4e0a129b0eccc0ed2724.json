{"ast":null,"code":"const initialState={username:'',accessToken:'',refreshToken:'',userId:'',email:\"\",firstName:\"\",lastName:\"\",birtDate:\"\",role:\"\",gender:\"\",avatar:\"\",chats:[],chatsRoom:[],chatsPeople:[],currentChat:null,images:[],avatarPeople:[],avatarGroups:[],nickNameGroups:[],nickNamePeople:[]};export default function userReducer(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;switch(action.type){case'LOGIN_SUCCESS':return{...state,accessToken:action.payload.accessToken,refreshToken:action.payload.refreshToken};case'SAVE_USER_INFO':return{...state,userId:action.payload.userId,username:action.payload.username,email:action.payload.email,firstName:action.payload.firstName,lastName:action.payload.lastName,role:action.payload.role,gender:action.payload.gender,avatar:action.payload.avatar,birtDate:action.payload.birtDate};// case 'SAVE_LIST_CHATS':\n//     return {\n//         ...state,\n//         chats: action.payload,\n//     }\n// case 'CHANGE_CURRENT_CHAT':\n//     let nameChat = action.payload.nameChat;\n//     let type = action.payload.type;\n//     let currentChatChoose = null;\n//     if(type == 1){\n//         const room= state.chatsRoom.find(room => room.name === nameChat);\n//         currentChatChoose = room;\n//         console.log(room+\"HELLO\")\n//     }\n//     if(type == 0){\n//         const people= state.chatsPeople.find(people => people.name === nameChat);\n//         if(people){\n//             currentChatChoose = people;\n//         }\n//     }\n//     return {\n//         ...state,\n//         currentChat: currentChatChoose,\n//     }\n// case 'UPDATE_CHATS':\n//     // let isExist = false;\n//     const updateChats = state.chatsRoom.map((room,index) => {\n//         if(room.name === action.payload.name){\n//             // isExist = true;\n//             return action.payload;\n//         }\n//         return room;\n//     });\n//     // if(!isExist) updateChats.push(action.payload);\n//     return {\n//         ...state,\n//         chatsRoom: updateChats,\n//         currentChat: action.payload,\n//     }\n// case 'CLEAR_CURRENT_CHAT': {\n//     return {\n//         ...state,\n//         currentChat: null,\n//     }\n// }\n// case 'LOGOUT_SUCCESS':\n//     return initialState;\ndefault:return state;}}","map":{"version":3,"names":["initialState","username","accessToken","refreshToken","userId","email","firstName","lastName","birtDate","role","gender","avatar","chats","chatsRoom","chatsPeople","currentChat","images","avatarPeople","avatarGroups","nickNameGroups","nickNamePeople","userReducer","state","arguments","length","undefined","action","type","payload"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/store/reducers/UserReducer.js"],"sourcesContent":["\nconst initialState = {\n    username: '',\n    accessToken: '',\n    refreshToken: '',\n    userId: '',\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    birtDate: \"\",\n    role: \"\",\n    gender: \"\",\n    avatar: \"\",\n    chats: [],\n    chatsRoom: [],\n    chatsPeople: [],\n    currentChat: null,\n    images: [],\n    avatarPeople: [],\n    avatarGroups: [],\n    nickNameGroups: [],\n    nickNamePeople: [],\n};\nexport default function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                accessToken: action.payload.accessToken,\n                refreshToken: action.payload.refreshToken,\n            };\n        case 'SAVE_USER_INFO':\n            return {\n                ...state,\n                userId: action.payload.userId,\n                username: action.payload.username,\n                email: action.payload.email,\n                firstName: action.payload.firstName,\n                lastName: action.payload.lastName,\n                role: action.payload.role,\n                gender: action.payload.gender,\n                avatar: action.payload.avatar,\n                birtDate: action.payload.birtDate,\n            }\n        // case 'SAVE_LIST_CHATS':\n        //     return {\n        //         ...state,\n        //         chats: action.payload,\n        //     }\n        // case 'CHANGE_CURRENT_CHAT':\n        //     let nameChat = action.payload.nameChat;\n        //     let type = action.payload.type;\n        //     let currentChatChoose = null;\n        //     if(type == 1){\n        //         const room= state.chatsRoom.find(room => room.name === nameChat);\n        //         currentChatChoose = room;\n        //         console.log(room+\"HELLO\")\n        //     }\n        //     if(type == 0){\n        //         const people= state.chatsPeople.find(people => people.name === nameChat);\n        //         if(people){\n        //             currentChatChoose = people;\n        //         }\n        //     }\n        //     return {\n        //         ...state,\n        //         currentChat: currentChatChoose,\n        //     }\n        // case 'UPDATE_CHATS':\n        //     // let isExist = false;\n        //     const updateChats = state.chatsRoom.map((room,index) => {\n        //         if(room.name === action.payload.name){\n        //             // isExist = true;\n        //             return action.payload;\n        //         }\n        //         return room;\n        //     });\n        //     // if(!isExist) updateChats.push(action.payload);\n        //     return {\n        //         ...state,\n        //         chatsRoom: updateChats,\n        //         currentChat: action.payload,\n        //     }\n        // case 'CLEAR_CURRENT_CHAT': {\n        //     return {\n        //         ...state,\n        //         currentChat: null,\n        //     }\n        // }\n        // case 'LOGOUT_SUCCESS':\n        //     return initialState;\n        default:\n            return state;\n    }\n}"],"mappings":"AACA,KAAM,CAAAA,YAAY,CAAG,CACjBC,QAAQ,CAAE,EAAE,CACZC,WAAW,CAAE,EAAE,CACfC,YAAY,CAAE,EAAE,CAChBC,MAAM,CAAE,EAAE,CACVC,KAAK,CAAE,EAAE,CACTC,SAAS,CAAE,EAAE,CACbC,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EAAE,CACZC,IAAI,CAAE,EAAE,CACRC,MAAM,CAAE,EAAE,CACVC,MAAM,CAAE,EAAE,CACVC,KAAK,CAAE,EAAE,CACTC,SAAS,CAAE,EAAE,CACbC,WAAW,CAAE,EAAE,CACfC,WAAW,CAAE,IAAI,CACjBC,MAAM,CAAE,EAAE,CACVC,YAAY,CAAE,EAAE,CAChBC,YAAY,CAAE,EAAE,CAChBC,cAAc,CAAE,EAAE,CAClBC,cAAc,CAAE,EACpB,CAAC,CACD,cAAe,SAAS,CAAAC,WAAWA,CAAA,CAA+B,IAA9B,CAAAC,KAAK,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAGvB,YAAY,IAAE,CAAA0B,MAAM,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CAC5D,OAAQC,MAAM,CAACC,IAAI,EACf,IAAK,eAAe,CAChB,MAAO,CACH,GAAGL,KAAK,CACRpB,WAAW,CAAEwB,MAAM,CAACE,OAAO,CAAC1B,WAAW,CACvCC,YAAY,CAAEuB,MAAM,CAACE,OAAO,CAACzB,YACjC,CAAC,CACL,IAAK,gBAAgB,CACjB,MAAO,CACH,GAAGmB,KAAK,CACRlB,MAAM,CAAEsB,MAAM,CAACE,OAAO,CAACxB,MAAM,CAC7BH,QAAQ,CAAEyB,MAAM,CAACE,OAAO,CAAC3B,QAAQ,CACjCI,KAAK,CAAEqB,MAAM,CAACE,OAAO,CAACvB,KAAK,CAC3BC,SAAS,CAAEoB,MAAM,CAACE,OAAO,CAACtB,SAAS,CACnCC,QAAQ,CAAEmB,MAAM,CAACE,OAAO,CAACrB,QAAQ,CACjCE,IAAI,CAAEiB,MAAM,CAACE,OAAO,CAACnB,IAAI,CACzBC,MAAM,CAAEgB,MAAM,CAACE,OAAO,CAAClB,MAAM,CAC7BC,MAAM,CAAEe,MAAM,CAACE,OAAO,CAACjB,MAAM,CAC7BH,QAAQ,CAAEkB,MAAM,CAACE,OAAO,CAACpB,QAC7B,CAAC,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QACI,MAAO,CAAAc,KAAK,CACpB,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}