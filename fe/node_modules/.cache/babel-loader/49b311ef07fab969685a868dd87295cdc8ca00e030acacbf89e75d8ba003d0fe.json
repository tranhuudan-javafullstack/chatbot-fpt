{"ast":null,"code":"import{ApiConstants}from\"../utils/Constants\";export const getKnowledges=async accessToken=>{try{const res=await fetch(\"http://localhost:8068/api/v1/users/knowledges\",{method:\"GET\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(accessToken)}});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};export const createKnowledge=async(name,description,authToken)=>{try{const res=await fetch(ApiConstants.knowledges,{method:\"POST\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(authToken)},body:JSON.stringify({\"name\":name,\"description\":description})});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};export const updateKnowledge=async(knowledgeId,name,description,authToken)=>{try{const res=await fetch(\"\".concat(ApiConstants.knowledges,\"/\").concat(knowledgeId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(authToken)},body:JSON.stringify({\"name\":name,\"description\":description})});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};export const deleteKnowledge=async(knowledgeId,authToken)=>{try{const res=await fetch(\"\".concat(ApiConstants.knowledges,\"/\").concat(knowledgeId),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(authToken)}});// const data = await res.json();\nif(res.status!==204){throw new Error(\"ERROR\");}else{return\"SUCCESSFUL\";}}catch(error){throw error;}};export const addFileToKnowledge=async(files,knowledgeId,accessToken)=>{try{const formData=new FormData();Array.from(files).forEach((file,index)=>{formData.append('files',file);});const res=await fetch(\"\".concat(ApiConstants.knowledges,\"/\").concat(knowledgeId,\"/files\"),{method:\"POST\",headers:{authorization:\"Bearer \".concat(accessToken)},body:formData});if(res.status!==201){throw new Error(\"ERROR\");}else{return\"SUCCESSFUL\";}}catch(error){throw error;}};export const deleteFileFromKnowledge=async(fileId,knowledgeId,accessToken)=>{try{const res=await fetch(\"\".concat(ApiConstants.knowledges,\"/\").concat(knowledgeId,\"/files/\").concat(fileId),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(accessToken)}});if(res.status===422){const data=await res.json();throw new Error(\"\".concat(data.detail[0].msg));}if(res.status!=204){throw new Error(\"ERROR\");}else{return\"SUCCESSFUL\";}}catch(error){throw error;}};export const getFilesKnowledge=async(accessToken,knowledgeId)=>{try{const res=await fetch(\"\".concat(ApiConstants.knowledges,\"/\").concat(knowledgeId),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(accessToken)}});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};export const getDetailFilesKnowledge=async(accessToken,knowledgeId,fileId)=>{try{const res=await fetch(\"\".concat(ApiConstants.knowledges,\"/\").concat(knowledgeId,\"/files/\").concat(fileId),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(accessToken)}});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};","map":{"version":3,"names":["ApiConstants","getKnowledges","accessToken","res","fetch","method","headers","authorization","concat","data","json","ok","Error","detail","error","createKnowledge","name","description","authToken","knowledges","body","JSON","stringify","updateKnowledge","knowledgeId","deleteKnowledge","status","addFileToKnowledge","files","formData","FormData","Array","from","forEach","file","index","append","deleteFileFromKnowledge","fileId","msg","getFilesKnowledge","getDetailFilesKnowledge"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/services/KnowledgeService.js"],"sourcesContent":["import {ApiConstants} from \"../utils/Constants\";\n\nexport const getKnowledges = async (accessToken) => {\n    try {\n        const res = await fetch(`http://localhost:8068/api/v1/users/knowledges`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const createKnowledge = async (name, description, authToken) => {\n    try {\n        const res = await fetch(ApiConstants.knowledges, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify({\n                \"name\": name,\n                \"description\": description,\n            })\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const updateKnowledge = async (knowledgeId,name, description, authToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify({\n                \"name\": name,\n                \"description\": description,\n            })\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const deleteKnowledge = async (knowledgeId, authToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n        });\n        // const data = await res.json();\n        if(res.status !== 204){\n            throw new Error(`ERROR`);\n        }else{\n            return \"SUCCESSFUL\";\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const addFileToKnowledge = async (files,knowledgeId, accessToken) => {\n    try {\n        const formData = new FormData();\n        Array.from(files).forEach((file, index) => {\n            formData.append('files', file);\n        });\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}/files`, {\n            method: \"POST\",\n            headers: {\n                authorization: `Bearer ${accessToken}`,\n            },\n            body: formData,\n        });\n        if (res.status !== 201) {\n            throw new Error(`ERROR`);\n        } else {\n            return \"SUCCESSFUL\";\n        }\n    } catch (error) {\n        throw error;\n    }\n}\nexport const deleteFileFromKnowledge = async (fileId,knowledgeId, accessToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}/files/${fileId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        if(res.status === 422){\n            const data = await res.json();\n            throw new Error(`${data.detail[0].msg}`);\n        }\n        if(res.status != 204){\n            throw new Error(`ERROR`);\n        }else{\n            return \"SUCCESSFUL\";\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const getFilesKnowledge = async (accessToken, knowledgeId) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const getDetailFilesKnowledge = async (accessToken, knowledgeId, fileId) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledges}/${knowledgeId}/files/${fileId}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}