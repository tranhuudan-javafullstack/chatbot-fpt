{"ast":null,"code":"var _jsxFileName = \"/Users/huudan/Development/chatbot.com/fe/src/components/chat_window/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport ChatArea from \"../chat_area/ChatArea\";\nimport DocumentViewer from \"../document_viewer/DocumentViewer\";\nimport { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { decryptToken } from \"../../utils/Functions\";\nimport Loading from \"../loading/Loading\";\nimport { getChatsInBot } from \"../../services/ChatBotService\";\nimport { actionSaveCurrentChatInBot } from \"../../store/actions/ChatAction\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ChatWindow() {\n  _s();\n  const {\n    botId,\n    chatId\n  } = useParams();\n  const [isLoading, setIsLoading] = useState(true);\n  const dispatch = useDispatch();\n  const accessToken = decryptToken(localStorage.getItem('access_token'));\n  // const myknowledges = useSelector((state) => state.knowledgeReducer.knowledges);\n  const [chats, setChats] = useState([]);\n  const [isLoadChat, setIsLoadchat] = useState(false);\n  const [showContext, setShowContext] = useState(true);\n  useEffect(() => {\n    // fetchData();\n    fetchChatInBot();\n  }, [chatId, accessToken]);\n  const fetchData = async () => {\n    try {\n      const data = await getChatsInBot(accessToken, botId, chatId);\n      dispatch(actionSaveCurrentChatInBot(data));\n      setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching chat:', error.message);\n    }\n  };\n  const fetchChatInBot = async () => {\n    try {\n      const data = await getChatsInBot(accessToken, botId, chatId);\n      // console.log(\"DATA CHAT IN BOT\", data.queries);\n      setChats(data.queries);\n      setIsLoading(false);\n      // setIsLoading(false);\n    } catch (error) {\n      console.error('Error fetching chat:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ChatArea, {\n        chats: chats,\n        fetChats: fetchChatInBot,\n        showContext: showContext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DocumentViewer, {\n        chats: chats,\n        showContext: showContext,\n        setShowContext: setShowContext\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n_s(ChatWindow, \"JWeDPlThTesCWvWjTKS+OFioApM=\", false, function () {\n  return [useParams, useDispatch];\n});\n_c = ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["ChatArea","DocumentViewer","useParams","useEffect","useState","useDispatch","decryptToken","Loading","getChatsInBot","actionSaveCurrentChatInBot","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatWindow","_s","botId","chatId","isLoading","setIsLoading","dispatch","accessToken","localStorage","getItem","chats","setChats","isLoadChat","setIsLoadchat","showContext","setShowContext","fetchChatInBot","fetchData","data","error","console","message","queries","children","fileName","_jsxFileName","lineNumber","columnNumber","fetChats","_c","$RefreshReg$"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/components/chat_window/ChatWindow.js"],"sourcesContent":["import ChatArea from \"../chat_area/ChatArea\";\nimport DocumentViewer from \"../document_viewer/DocumentViewer\";\nimport {useParams} from \"react-router-dom\";\nimport {useEffect, useState} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {decryptToken} from \"../../utils/Functions\";\nimport Loading from \"../loading/Loading\";\nimport {getChatsInBot} from \"../../services/ChatBotService\";\nimport {actionSaveCurrentChatInBot} from \"../../store/actions/ChatAction\";\n\nexport default function ChatWindow() {\n    const { botId, chatId } = useParams();\n    const [isLoading, setIsLoading] = useState(true);\n    const dispatch = useDispatch();\n    const accessToken = decryptToken(localStorage.getItem('access_token'));\n    // const myknowledges = useSelector((state) => state.knowledgeReducer.knowledges);\n    const [chats, setChats] = useState([]);\n    const [isLoadChat, setIsLoadchat] = useState(false)\n    const [showContext, setShowContext] = useState(true);\n    useEffect(() => {\n        // fetchData();\n        fetchChatInBot();\n    }, [chatId,accessToken]);\n    const fetchData = async () => {\n        try {\n            const data = await getChatsInBot(accessToken, botId, chatId);\n            dispatch(actionSaveCurrentChatInBot(data));\n            setIsLoading(false);\n        } catch (error) {\n            console.error('Error fetching chat:', error.message);\n        }\n    };\n    const fetchChatInBot = async () => {\n        try {\n            const data = await getChatsInBot(accessToken, botId, chatId);\n            // console.log(\"DATA CHAT IN BOT\", data.queries);\n            setChats(data.queries);\n            setIsLoading(false);\n            // setIsLoading(false);\n        } catch (error) {\n            console.error('Error fetching chat:', error.message);\n        }\n    };\n    return (\n        <>\n            {isLoading? <Loading/> : <>\n                <ChatArea chats={chats} fetChats={fetchChatInBot} showContext={showContext}/>\n                <DocumentViewer chats={chats} showContext={showContext} setShowContext={setShowContext}/>\n            </>}\n\n        </>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}