{"ast":null,"code":"import { ApiConstants } from \"../utils/Constants\";\nexport const createBot = async (name, description, authToken) => {\n  try {\n    const res = await fetch(ApiConstants.bots, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        \"name\": name,\n        \"description\": description\n      })\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(`${data.detail}`);\n    } else {\n      return data;\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport const updateBot = async (botId, name, description, authToken) => {\n  try {\n    const res = await fetch(`${ApiConstants.bots}/${botId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${authToken}`\n      },\n      body: JSON.stringify({\n        \"name\": name,\n        \"description\": description\n        // \"prompt\": \"string\",\n        // \"active\": true,\n        // \"memory\": true\n      })\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(`${data.detail}`);\n    } else {\n      return data;\n    }\n  } catch (error) {\n    throw error;\n  }\n};\nexport const deleteBot = async (botId, authToken) => {\n  try {\n    const res = await fetch(`${ApiConstants.bots}/${botId}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${authToken}`\n      }\n    });\n    const data = await res.json();\n    if (!res.ok) {\n      throw new Error(`${data.detail}`);\n    } else {\n      return data;\n    }\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["ApiConstants","createBot","name","description","authToken","res","fetch","bots","method","headers","authorization","body","JSON","stringify","data","json","ok","Error","detail","error","updateBot","botId","deleteBot"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/services/BotsService.js"],"sourcesContent":["import {ApiConstants} from \"../utils/Constants\";\n\nexport const createBot = async (name, description, authToken) => {\n    try {\n        const res = await fetch(ApiConstants.bots, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify({\n                \"name\": name,\n                \"description\": description,\n            })\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const updateBot = async (botId,name, description, authToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.bots}/${botId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify({\n                \"name\": name,\n                \"description\": description,\n                // \"prompt\": \"string\",\n                // \"active\": true,\n                // \"memory\": true\n            })\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const deleteBot = async (botId, authToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.bots}/${botId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}"],"mappings":"AAAA,SAAQA,YAAY,QAAO,oBAAoB;AAE/C,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,IAAI,EAAEC,WAAW,EAAEC,SAAS,KAAK;EAC7D,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACN,YAAY,CAACO,IAAI,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUN,SAAS;MACtC,CAAC;MACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjB,MAAM,EAAEX,IAAI;QACZ,aAAa,EAAEC;MACnB,CAAC;IACL,CAAC,CAAC;IACF,MAAMW,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,CAAC;IAC7B,IAAG,CAACV,GAAG,CAACW,EAAE,EAAC;MACP,MAAM,IAAIC,KAAK,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAE,CAAC;IACrC,CAAC,MAAI;MACD,OAAOJ,IAAI;IACf;EACJ,CAAC,QAAOK,KAAK,EAAE;IACX,MAAMA,KAAK;EACf;AACJ,CAAC;AACD,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAACnB,IAAI,EAAEC,WAAW,EAAEC,SAAS,KAAK;EACnE,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,CAACO,IAAI,IAAIc,KAAK,EAAE,EAAE;MACrDb,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUN,SAAS;MACtC,CAAC;MACDO,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjB,MAAM,EAAEX,IAAI;QACZ,aAAa,EAAEC;QACf;QACA;QACA;MACJ,CAAC;IACL,CAAC,CAAC;IACF,MAAMW,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,CAAC;IAC7B,IAAG,CAACV,GAAG,CAACW,EAAE,EAAC;MACP,MAAM,IAAIC,KAAK,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAE,CAAC;IACrC,CAAC,MAAI;MACD,OAAOJ,IAAI;IACf;EACJ,CAAC,QAAOK,KAAK,EAAE;IACX,MAAMA,KAAK;EACf;AACJ,CAAC;AACD,OAAO,MAAMG,SAAS,GAAG,MAAAA,CAAOD,KAAK,EAAEjB,SAAS,KAAK;EACjD,IAAI;IACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGN,YAAY,CAACO,IAAI,IAAIc,KAAK,EAAE,EAAE;MACrDb,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE,UAAUN,SAAS;MACtC;IACJ,CAAC,CAAC;IACF,MAAMU,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,CAAC;IAC7B,IAAG,CAACV,GAAG,CAACW,EAAE,EAAC;MACP,MAAM,IAAIC,KAAK,CAAC,GAAGH,IAAI,CAACI,MAAM,EAAE,CAAC;IACrC,CAAC,MAAI;MACD,OAAOJ,IAAI;IACf;EACJ,CAAC,QAAOK,KAAK,EAAE;IACX,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}