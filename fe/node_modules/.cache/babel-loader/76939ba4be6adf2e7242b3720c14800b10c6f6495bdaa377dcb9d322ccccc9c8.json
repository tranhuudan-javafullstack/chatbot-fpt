{"ast":null,"code":"import\"./SelectedKnowledgeModal.scss\";import knowledgeImage from\"../../assets/images/dataset_text.png\";import{useEffect,useState}from\"react\";import{Link}from\"react-router-dom\";import{addKnowledgeToBot,deleteKnowledgeToBot}from\"../../services/ChatBotService\";import{getKnowledges}from\"../../services/KnowledgeService\";import{decryptToken}from\"../../utils/Functions\";import Loading from\"../loading/Loading\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function SelectedKnowledgeModal(_ref){let{toggleShowModal,knowledges,botId,addKnowledge,deleteKnowledge}=_ref;const[myknowledges,setMyknowledges]=useState([]);const[isLoading,setIsLoading]=useState(true);const accessToken=decryptToken(localStorage.getItem('access_token'));useEffect(()=>{fetchMyKnowledge();},[accessToken]);const fetchMyKnowledge=async()=>{try{const myKnowledge=await getKnowledges(accessToken);setMyknowledges(myKnowledge.knowledges);setIsLoading(false);}catch(error){console.error('Error fetching chat:',error.message);}};const getTitleAction=id=>{const found=knowledges.find(knowledge=>knowledge.knowledge_id===id);if(found){return\"Remove\";}else{return\"Add\";}};function formatDate(dateString){const date=new Date(dateString);if(isNaN(date.getTime())){throw new Error(\"Invalid date string\");}const year=date.getFullYear();const month=String(date.getMonth()+1).padStart(2,'0');const day=String(date.getDate()).padStart(2,'0');return\"\".concat(day,\"/\").concat(month,\"/\").concat(year);}const handleAddKnowlegeToBot=async knowledgeId=>{try{const data=await addKnowledgeToBot(botId,knowledgeId,accessToken);addKnowledge(data.knowledges);}catch(error){console.error('Error fetching chat:',error.message);}};const handleDeleteKnowlegeInBot=async knowledgeId=>{try{const data=await deleteKnowledgeToBot(botId,knowledgeId,accessToken);deleteKnowledge(knowledgeId);}catch(error){console.error('Error fetching chat:',error.message);}};const handleButton=(action,knowledgeId,event)=>{event.preventDefault();if(action==\"Add\")return handleAddKnowlegeToBot(knowledgeId);return handleDeleteKnowlegeInBot(knowledgeId);};return/*#__PURE__*/_jsx(\"div\",{className:\"overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"selected_knowledge__modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal__header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"modal__title\",children:\"Ch\\u1ECDn ki\\u1EBFn th\\u1EE9c\"}),/*#__PURE__*/_jsx(\"div\",{onClick:toggleShowModal,className:\"modal_btn_close\",children:/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-x-lg\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal__body\",children:/*#__PURE__*/_jsx(\"div\",{className:\"knowledge__wrapper\",children:isLoading?/*#__PURE__*/_jsx(Loading,{}):myknowledges.map((knowledge,index)=>{const action=getTitleAction(knowledge.knowledge_id);return/*#__PURE__*/_jsxs(Link,{className:\"link\",to:\"/knowledge/\".concat(knowledge.knowledge_id,\"/files\"),children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"knowledge__container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"knowledge__container--left\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"image__container\",children:/*#__PURE__*/_jsx(\"img\",{src:knowledgeImage,alt:\"\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"content__container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"knowledge_title\",children:knowledge.name}),/*#__PURE__*/_jsx(\"span\",{className:\"knowledge_description\",children:knowledge.description}),/*#__PURE__*/_jsxs(\"span\",{className:\"create_time\",children:[\"Create time: \",formatDate(knowledge.created_at)]})]})]},knowledge.knowledge_id),/*#__PURE__*/_jsx(\"div\",{onClick:e=>handleButton(action,knowledge.knowledge_id,e),className:\"knowledge__container--right\",children:/*#__PURE__*/_jsx(\"div\",{className:\"btn_action \".concat(action==\"Add\"?\"\":\"btn_action--delete\",\" \"),children:/*#__PURE__*/_jsx(\"span\",{children:action})})})]})]});})})})]})});}","map":{"version":3,"names":["knowledgeImage","useEffect","useState","Link","addKnowledgeToBot","deleteKnowledgeToBot","getKnowledges","decryptToken","Loading","jsx","_jsx","jsxs","_jsxs","SelectedKnowledgeModal","_ref","toggleShowModal","knowledges","botId","addKnowledge","deleteKnowledge","myknowledges","setMyknowledges","isLoading","setIsLoading","accessToken","localStorage","getItem","fetchMyKnowledge","myKnowledge","error","console","message","getTitleAction","id","found","find","knowledge","knowledge_id","formatDate","dateString","date","Date","isNaN","getTime","Error","year","getFullYear","month","String","getMonth","padStart","day","getDate","concat","handleAddKnowlegeToBot","knowledgeId","data","handleDeleteKnowlegeInBot","handleButton","action","event","preventDefault","className","children","onClick","map","index","to","src","alt","name","description","created_at","e"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/components/selected_knowledge_modal/SelectedKnowledgeModal.js"],"sourcesContent":["import \"./SelectedKnowledgeModal.scss\"\nimport knowledgeImage from \"../../assets/images/dataset_text.png\"\nimport {useEffect, useState} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {addKnowledgeToBot, deleteKnowledgeToBot} from \"../../services/ChatBotService\";\nimport {getKnowledges} from \"../../services/KnowledgeService\";\nimport {decryptToken} from \"../../utils/Functions\";\nimport Loading from \"../loading/Loading\";\n\nexport default function SelectedKnowledgeModal({toggleShowModal, knowledges, botId, addKnowledge, deleteKnowledge}) {\n    const [myknowledges, setMyknowledges] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const accessToken = decryptToken(localStorage.getItem('access_token'));\n    useEffect(() => {\n       fetchMyKnowledge();\n    }, [accessToken]);\n    const fetchMyKnowledge = async () => {\n        try {\n            const myKnowledge = await getKnowledges(accessToken);\n            setMyknowledges(myKnowledge.knowledges);\n            setIsLoading(false);\n        } catch (error) {\n            console.error('Error fetching chat:', error.message);\n        }\n    };\n    const getTitleAction = (id) =>{\n        const found = knowledges.find(knowledge => knowledge.knowledge_id === id);\n        if (found) {\n            return \"Remove\";\n        } else {\n            return \"Add\";\n        }\n    }\n    function formatDate(dateString) {\n        const date = new Date(dateString);\n\n        if (isNaN(date.getTime())) {\n            throw new Error(\"Invalid date string\");\n        }\n\n        const year = date.getFullYear();\n        const month = String(date.getMonth() + 1).padStart(2, '0');\n        const day = String(date.getDate()).padStart(2, '0');\n\n        return `${day}/${month}/${year}`;\n    }\n    const handleAddKnowlegeToBot = async (knowledgeId) => {\n        try {\n            const data = await addKnowledgeToBot(botId, knowledgeId, accessToken);\n            addKnowledge(data.knowledges);\n        } catch (error) {\n            console.error('Error fetching chat:', error.message);\n        }\n    }\n    const handleDeleteKnowlegeInBot = async (knowledgeId) => {\n        try {\n            const data = await deleteKnowledgeToBot(botId, knowledgeId, accessToken);\n            deleteKnowledge(knowledgeId);\n        } catch (error) {\n            console.error('Error fetching chat:', error.message);\n        }\n    }\n    const handleButton = (action, knowledgeId, event) => {\n        event.preventDefault();\n        if(action == \"Add\") return handleAddKnowlegeToBot(knowledgeId);\n        return handleDeleteKnowlegeInBot(knowledgeId);\n    }\n    return (\n        <div className=\"overlay\">\n            <div className=\"selected_knowledge__modal\">\n                <div className=\"modal__header\">\n                    <span className=\"modal__title\">Chọn kiến thức</span>\n                    <div onClick={toggleShowModal} className=\"modal_btn_close\">\n                        <i className=\"bi bi-x-lg\"></i>\n                    </div>\n                </div>\n                <div className=\"modal__body\">\n                    <div className=\"knowledge__wrapper\">\n                        {isLoading ? <Loading/> :  myknowledges.map((knowledge, index)=>{\n                            const  action = getTitleAction(knowledge.knowledge_id);\n                            return <Link className={\"link\"} to={`/knowledge/${knowledge.knowledge_id}/files`}> <div className=\"knowledge__container\">\n                                <div key={knowledge.knowledge_id} className=\"knowledge__container--left\">\n                                    <div className=\"image__container\">\n                                        <img src={knowledgeImage} alt=\"\"/>\n                                    </div>\n                                    <div className=\"content__container\">\n                                        <span className=\"knowledge_title\">{knowledge.name}</span>\n                                        <span className=\"knowledge_description\">{knowledge.description}</span>\n                                        {/*<div className=\"tags__container\">*/}\n                                        {/*    <div className=\"tag\"><span>1.9MB</span> </div>*/}\n                                        {/*    <div className=\"tag\"><span>1 Data</span></div>*/}\n                                        {/*</div>*/}\n                                        <span className=\"create_time\">Create time: {formatDate(knowledge.created_at)}</span>\n                                    </div>\n                                </div>\n                                <div onClick={(e)=> handleButton(action, knowledge.knowledge_id, e)} className=\"knowledge__container--right\">\n                                    <div className={`btn_action ${action == \"Add\" ? \"\" : \"btn_action--delete\"} `}>\n                                        <span>{action}</span>\n                                    </div>\n                                </div>\n                            </div></Link>\n                            })}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}