{"ast":null,"code":"var _jsxFileName = \"/Users/huudan/Development/chatbot.com/fe/src/components/knowledge_modal/KnowledgeModal.js\",\n  _s = $RefreshSig$();\nimport InputModal from \"../input_modal/InputModal\";\nimport TextAreaModal from \"../textarea_modal/TextAreaModal\";\nimport TextButtonIcon from \"../icon_text_button/TextButtonIcon\";\nimport { useEffect, useRef, useState } from \"react\";\nimport \"./KnowledgeModal.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KnowledgeModal({\n  knowledgeId,\n  titleForm,\n  toggleShow,\n  confirm,\n  title,\n  description\n}) {\n  _s();\n  const [knowledgeName, setKnowledgeName] = useState(title);\n  const [descriptionKnowledge, setDescriptionKnowledge] = useState(description);\n  const fileInputRef = useRef(null);\n  const [files, setFiles] = useState([]);\n  const [formTitle, setFormTitle] = useState(\"Create knowledge\");\n  useEffect(() => {\n    if (title) {\n      setKnowledgeName(title);\n      setFormTitle(\"Edit knowledge\");\n      console.log(\"Edit knowledge\");\n    } else {\n      setFormTitle(\"Create knowledge\");\n      setKnowledgeName(\"\");\n      console.log(\"Create knowledge\");\n    }\n    if (description) {\n      setDescriptionKnowledge(description);\n    } else {\n      setDescriptionKnowledge(\"\");\n    }\n  }, [title, description]);\n  const handleChooseFile = () => {\n    fileInputRef.current.click();\n  };\n  const uploadDocument = e => {\n    const files = e.target.files;\n    setFiles(prevFiles => [...prevFiles, ...files]);\n  };\n  const handleFileRemove = indexToRemove => {\n    setFiles(files.filter((_, index) => index !== indexToRemove));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new_bot__modal \",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title_form\",\n        children: formTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"new_bot__modal-body\",\n        children: [/*#__PURE__*/_jsxDEV(InputModal, {\n          currentLength: knowledgeName.length,\n          value: knowledgeName,\n          onChangeInput: setKnowledgeName,\n          label: \"Name\",\n          placeHolder: \"Dataset name cannot be empty\",\n          maxLength: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextAreaModal, {\n          value: descriptionKnowledge,\n          currentLength: descriptionKnowledge.length,\n          onChangeInput: setDescriptionKnowledge,\n          label: \"Bot function description\",\n          placeHolder: \"Enter the content of the dataset\",\n          maxLength: 2000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new_bot__modal-footer\",\n        children: [/*#__PURE__*/_jsxDEV(TextButtonIcon, {\n          title: \"Cancel\",\n          onPress: toggleShow,\n          background: \"#FFFFFF\",\n          color: \"#1C1C1C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextButtonIcon, {\n          title: \"Confirm\",\n          onPress: () => confirm(knowledgeName, descriptionKnowledge, knowledgeId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(KnowledgeModal, \"e0I4bM/y2bTMJtzs8/IgaBx/IKg=\");\n_c = KnowledgeModal;\nvar _c;\n$RefreshReg$(_c, \"KnowledgeModal\");","map":{"version":3,"names":["InputModal","TextAreaModal","TextButtonIcon","useEffect","useRef","useState","jsxDEV","_jsxDEV","KnowledgeModal","knowledgeId","titleForm","toggleShow","confirm","title","description","_s","knowledgeName","setKnowledgeName","descriptionKnowledge","setDescriptionKnowledge","fileInputRef","files","setFiles","formTitle","setFormTitle","console","log","handleChooseFile","current","click","uploadDocument","e","target","prevFiles","handleFileRemove","indexToRemove","filter","_","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","currentLength","length","value","onChangeInput","label","placeHolder","maxLength","onPress","background","color","_c","$RefreshReg$"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/components/knowledge_modal/KnowledgeModal.js"],"sourcesContent":["import InputModal from \"../input_modal/InputModal\";\nimport TextAreaModal from \"../textarea_modal/TextAreaModal\";\nimport TextButtonIcon from \"../icon_text_button/TextButtonIcon\";\nimport {useEffect, useRef, useState} from \"react\";\nimport \"./KnowledgeModal.scss\"\n\nexport default function KnowledgeModal({knowledgeId,titleForm,toggleShow, confirm, title, description}) {\n    const [knowledgeName, setKnowledgeName] = useState(title);\n    const [descriptionKnowledge, setDescriptionKnowledge] = useState(description);\n    const fileInputRef = useRef(null);\n    const [files, setFiles] = useState([]);\n    const [formTitle, setFormTitle] = useState(\"Create knowledge\");\n    useEffect(() => {\n        if (title) {\n            setKnowledgeName(title);\n            setFormTitle(\"Edit knowledge\")\n            console.log(\"Edit knowledge\");\n        }else{\n            setFormTitle(\"Create knowledge\")\n            setKnowledgeName(\"\");\n            console.log(\"Create knowledge\");\n        }\n        if (description) {\n            setDescriptionKnowledge(description);\n        }else{\n            setDescriptionKnowledge(\"\");\n        }\n    }, [title, description]);\n    const handleChooseFile = () => {\n        fileInputRef.current.click();\n    };\n    const uploadDocument = (e) => {\n        const files = e.target.files;\n        setFiles(prevFiles => [...prevFiles, ...files]);\n    }\n    const handleFileRemove = (indexToRemove) => {\n        setFiles(files.filter((_, index) => index !== indexToRemove));\n    };\n    return(\n        <div className=\"overlay\">\n            <div className=\"new_bot__modal \">\n                <h2 className=\"title_form\">{formTitle}</h2>\n                <form className={\"new_bot__modal-body\"}>\n                    <InputModal currentLength={knowledgeName.length} value={knowledgeName} onChangeInput={setKnowledgeName} label={\"Name\"} placeHolder={\"Dataset name cannot be empty\"} maxLength={100}/>\n                    <TextAreaModal value={descriptionKnowledge} currentLength={descriptionKnowledge.length} onChangeInput={setDescriptionKnowledge} label={\"Bot function description\"} placeHolder={\"Enter the content of the dataset\"} maxLength={2000}/>\n                    {/*{formTitle == \"Create knowledge\" && <div className={\"form-field\"}>*/}\n                    {/*    <label className={\"label\"}>Upload</label>*/}\n                    {/*    <div className=\"input__wrapper\">*/}\n                    {/*        <input className={\"input_file\"} onChange={uploadDocument} type={\"file\"} ref={fileInputRef} multiple/>*/}\n                    {/*        <div onClick={handleChooseFile} className=\"upload\">*/}\n                    {/*            <i className=\"bi bi-cloud-arrow-up-fill\"></i>*/}\n                    {/*            <span className=\"input-title\">Click to upload</span>*/}\n                    {/*            <span className=\"input-sub\">Up load format TXT, DOC, PDF</span>*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*    <div className=\"files_container\">*/}\n                    {/*        {files.map((file, index)=><FileItem fileName={file.name} deleteFile={()=>handleFileRemove(index)}/>)}*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n                    {/*}*/}\n                </form>\n                <div className=\"new_bot__modal-footer\">\n                    <TextButtonIcon title={\"Cancel\"} onPress={toggleShow} background={\"#FFFFFF\"} color={\"#1C1C1C\"}/>\n                    <TextButtonIcon title={\"Confirm\"} onPress={()=>confirm(knowledgeName, descriptionKnowledge, knowledgeId)}/>\n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}