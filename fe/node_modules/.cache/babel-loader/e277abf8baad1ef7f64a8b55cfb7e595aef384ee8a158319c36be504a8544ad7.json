{"ast":null,"code":"import{ApiConstants}from\"../utils/Constants\";export const getChatsBot=async(accessToken,botId)=>{try{const res=await fetch(\"\".concat(ApiConstants.chatsBot,\"/\").concat(botId,\"/chats\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(accessToken)}});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};export const getChatsInBot=async(accessToken,botId,chatId)=>{try{const res=await fetch(\"\".concat(ApiConstants.chatsBot,\"/\").concat(botId,\"/chats/\").concat(chatId),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(accessToken)}});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};export const createChatBot=async(title,authToken,botId)=>{try{const res=await fetch(\"\".concat(ApiConstants.chatsBot,\"/\").concat(botId,\"/chats\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(authToken)},body:JSON.stringify({\"title\":title})});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};export const updateChatBot=async(title,authToken,botId,chatId)=>{try{const res=await fetch(\"\".concat(ApiConstants.chatsBot,\"/\").concat(botId,\"/chats/\").concat(chatId),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(authToken)},body:JSON.stringify({\"title\":title})});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};export const deleteChatBot=async(authToken,botId,chatId)=>{try{const res=await fetch(\"\".concat(ApiConstants.chatsBot,\"/\").concat(botId,\"/chats/\").concat(chatId),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(authToken)}});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};// queries\nexport const createQueryBot=async(botId,chatId,message,authToken)=>{try{const res=await fetch(\"\".concat(ApiConstants.chatQueries,\"/\").concat(botId,\"/chats/\").concat(chatId,\"/query\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(authToken)},body:JSON.stringify({\"query\":message})});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};// knowledges\nexport const getKnowledgeInBot=async(accessToken,botId)=>{try{const res=await fetch(\"\".concat(ApiConstants.knowledgeBot,\"/\").concat(botId,\"/knowledges\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(accessToken)}});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};export const addKnowledgeToBot=async(botId,knowledgeId,authToken)=>{try{const res=await fetch(\"\".concat(ApiConstants.knowledgeBot,\"/\").concat(botId,\"/knowledges\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(authToken)},body:JSON.stringify({\"knowledge_id\":knowledgeId})});const data=await res.json();if(!res.ok){throw new Error(\"\".concat(data.detail));}else{return data;}}catch(error){throw error;}};export const deleteKnowledgeToBot=async(botId,knowledgeId,authToken)=>{try{const res=await fetch(\"\".concat(ApiConstants.knowledgeBot,\"/\").concat(botId,\"/knowledges/\").concat(knowledgeId),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",authorization:\"Bearer \".concat(authToken)}});if(res.status!=204){throw new Error(\"ERROR\");}else{return\"SUCCESSFUL\";}}catch(error){throw error;}};","map":{"version":3,"names":["ApiConstants","getChatsBot","accessToken","botId","res","fetch","concat","chatsBot","method","headers","authorization","data","json","ok","Error","detail","error","getChatsInBot","chatId","createChatBot","title","authToken","body","JSON","stringify","updateChatBot","deleteChatBot","createQueryBot","message","chatQueries","getKnowledgeInBot","knowledgeBot","addKnowledgeToBot","knowledgeId","deleteKnowledgeToBot","status"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/services/ChatBotService.js"],"sourcesContent":["import {ApiConstants} from \"../utils/Constants\";\n\nexport const getChatsBot = async (accessToken, botId) => {\n    try {\n        const res = await fetch(`${ApiConstants.chatsBot}/${botId}/chats`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const getChatsInBot = async (accessToken, botId, chatId) => {\n    try {\n        const res = await fetch(`${ApiConstants.chatsBot}/${botId}/chats/${chatId}`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const createChatBot = async (title, authToken, botId) => {\n    try {\n        const res = await fetch(`${ApiConstants.chatsBot}/${botId}/chats`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify({\n                \"title\": title,\n            })\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const updateChatBot = async (title, authToken, botId, chatId) => {\n    try {\n        const res = await fetch(`${ApiConstants.chatsBot}/${botId}/chats/${chatId}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify({\n                \"title\": title,\n            })\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const deleteChatBot = async (authToken, botId, chatId) => {\n    try {\n        const res = await fetch(`${ApiConstants.chatsBot}/${botId}/chats/${chatId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\n// queries\nexport const createQueryBot = async (botId, chatId,message, authToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.chatQueries}/${botId}/chats/${chatId}/query`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify({\n                \"query\": message,\n            })\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\n// knowledges\nexport const getKnowledgeInBot = async (accessToken, botId) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledgeBot}/${botId}/knowledges`, {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${accessToken}`,\n            },\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const addKnowledgeToBot = async (botId, knowledgeId, authToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledgeBot}/${botId}/knowledges`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n            body: JSON.stringify({\n                \"knowledge_id\": knowledgeId,\n            })\n        });\n        const data = await res.json();\n        if(!res.ok){\n            throw new Error(`${data.detail}`);\n        }else{\n            return data;\n        }\n    }catch (error) {\n        throw error;\n    }\n}\nexport const deleteKnowledgeToBot = async (botId, knowledgeId, authToken) => {\n    try {\n        const res = await fetch(`${ApiConstants.knowledgeBot}/${botId}/knowledges/${knowledgeId}`, {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                authorization: `Bearer ${authToken}`,\n            },\n        });\n        if(res.status != 204){\n            throw new Error(`ERROR`);\n        }else{\n            return \"SUCCESSFUL\";\n        }\n    }catch (error) {\n        throw error;\n    }\n}\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}