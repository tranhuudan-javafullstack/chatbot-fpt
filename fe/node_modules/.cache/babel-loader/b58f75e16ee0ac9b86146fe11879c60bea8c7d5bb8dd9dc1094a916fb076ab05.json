{"ast":null,"code":"import CryptoJS from 'crypto-js';\nconst secretKey = \"REACT_APP_SECRET_KEY\";\nexport const encryptToken = token => {\n  return CryptoJS.AES.encrypt(token, secretKey).toString();\n};\nexport const decryptToken = encryptedToken => {\n  try {\n    if (!encryptedToken || typeof encryptedToken !== \"string\") {\n      console.warn(\"Invalid encrypted token:\", encryptedToken);\n      return null;\n    }\n    if (!secretKey) {\n      console.error(\"Missing secret key for decryption!\");\n      return null;\n    }\n    const bytes = CryptoJS.AES.decrypt(encryptedToken, secretKey);\n    const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n    if (!decrypted) {\n      console.warn(\"Decryption produced empty string, token might be invalid.\");\n      return null;\n    }\n    return decrypted;\n  } catch (err) {\n    console.error(\"Decryption error:\", err);\n    return null;\n  }\n};\nexport function getDateFromTimestamp(timestamp) {\n  const date = new Date(timestamp);\n  const day = date.getDate();\n  const month = date.getMonth() + 1; // Tháng trong JavaScript bắt đầu từ 0, nên cần +1\n  const year = date.getFullYear();\n  return `${day}/${month}/${year}`;\n}\nexport function formatBytes(bytes) {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}","map":{"version":3,"names":["CryptoJS","secretKey","encryptToken","token","AES","encrypt","toString","decryptToken","encryptedToken","console","warn","error","bytes","decrypt","decrypted","enc","Utf8","err","getDateFromTimestamp","timestamp","date","Date","day","getDate","month","getMonth","year","getFullYear","formatBytes","k","sizes","i","Math","floor","log","parseFloat","pow","toFixed"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/utils/Functions.js"],"sourcesContent":["import CryptoJS from 'crypto-js';\n\nconst secretKey = \"REACT_APP_SECRET_KEY\";\nexport const encryptToken = (token) => {\n    return CryptoJS.AES.encrypt(token, secretKey).toString();\n};\nexport const decryptToken = (encryptedToken) => {\n    try {\n        if (!encryptedToken || typeof encryptedToken !== \"string\") {\n            console.warn(\"Invalid encrypted token:\", encryptedToken);\n            return null;\n        }\n        if (!secretKey) {\n            console.error(\"Missing secret key for decryption!\");\n            return null;\n        }\n\n        const bytes = CryptoJS.AES.decrypt(encryptedToken, secretKey);\n\n        const decrypted = bytes.toString(CryptoJS.enc.Utf8);\n        if (!decrypted) {\n            console.warn(\"Decryption produced empty string, token might be invalid.\");\n            return null;\n        }\n\n        return decrypted;\n    } catch (err) {\n        console.error(\"Decryption error:\", err);\n        return null;\n    }\n};\n\nexport function getDateFromTimestamp(timestamp) {\n    const date = new Date(timestamp);\n    const day = date.getDate();\n    const month = date.getMonth() + 1; // Tháng trong JavaScript bắt đầu từ 0, nên cần +1\n    const year = date.getFullYear();\n\n    return `${day}/${month}/${year}`;\n}\n\nexport function formatBytes(bytes) {\n    if (bytes === 0) return '0 Bytes';\n\n    const k = 1024;\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,WAAW;AAEhC,MAAMC,SAAS,GAAG,sBAAsB;AACxC,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACnC,OAAOH,QAAQ,CAACI,GAAG,CAACC,OAAO,CAACF,KAAK,EAAEF,SAAS,CAAC,CAACK,QAAQ,CAAC,CAAC;AAC5D,CAAC;AACD,OAAO,MAAMC,YAAY,GAAIC,cAAc,IAAK;EAC5C,IAAI;IACA,IAAI,CAACA,cAAc,IAAI,OAAOA,cAAc,KAAK,QAAQ,EAAE;MACvDC,OAAO,CAACC,IAAI,CAAC,0BAA0B,EAAEF,cAAc,CAAC;MACxD,OAAO,IAAI;IACf;IACA,IAAI,CAACP,SAAS,EAAE;MACZQ,OAAO,CAACE,KAAK,CAAC,oCAAoC,CAAC;MACnD,OAAO,IAAI;IACf;IAEA,MAAMC,KAAK,GAAGZ,QAAQ,CAACI,GAAG,CAACS,OAAO,CAACL,cAAc,EAAEP,SAAS,CAAC;IAE7D,MAAMa,SAAS,GAAGF,KAAK,CAACN,QAAQ,CAACN,QAAQ,CAACe,GAAG,CAACC,IAAI,CAAC;IACnD,IAAI,CAACF,SAAS,EAAE;MACZL,OAAO,CAACC,IAAI,CAAC,2DAA2D,CAAC;MACzE,OAAO,IAAI;IACf;IAEA,OAAOI,SAAS;EACpB,CAAC,CAAC,OAAOG,GAAG,EAAE;IACVR,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEM,GAAG,CAAC;IACvC,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,SAASC,oBAAoBA,CAACC,SAAS,EAAE;EAC5C,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;EAChC,MAAMG,GAAG,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC;EAC1B,MAAMC,KAAK,GAAGJ,IAAI,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;EACnC,MAAMC,IAAI,GAAGN,IAAI,CAACO,WAAW,CAAC,CAAC;EAE/B,OAAO,GAAGL,GAAG,IAAIE,KAAK,IAAIE,IAAI,EAAE;AACpC;AAEA,OAAO,SAASE,WAAWA,CAAChB,KAAK,EAAE;EAC/B,IAAIA,KAAK,KAAK,CAAC,EAAE,OAAO,SAAS;EAEjC,MAAMiB,CAAC,GAAG,IAAI;EACd,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;EAC/C,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,GAAG,CAACtB,KAAK,CAAC,GAAGoB,IAAI,CAACE,GAAG,CAACL,CAAC,CAAC,CAAC;EAEnD,OAAOM,UAAU,CAAC,CAACvB,KAAK,GAAGoB,IAAI,CAACI,GAAG,CAACP,CAAC,EAAEE,CAAC,CAAC,EAAEM,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGP,KAAK,CAACC,CAAC,CAAC;AAC3E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}