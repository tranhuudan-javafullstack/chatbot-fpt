{"ast":null,"code":"import InputModal from\"../input_modal/InputModal\";import TextAreaModal from\"../textarea_modal/TextAreaModal\";import TextButtonIcon from\"../icon_text_button/TextButtonIcon\";import{useEffect,useRef,useState}from\"react\";import\"./KnowledgeModal.scss\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function KnowledgeModal(_ref){let{knowledgeId,titleForm,toggleShow,confirm,title,description}=_ref;const[knowledgeName,setKnowledgeName]=useState(title);const[descriptionKnowledge,setDescriptionKnowledge]=useState(description);const fileInputRef=useRef(null);const[files,setFiles]=useState([]);const[formTitle,setFormTitle]=useState(\"Create knowledge\");useEffect(()=>{if(title){setKnowledgeName(title);setFormTitle(\"Edit knowledge\");console.log(\"Edit knowledge\");}else{setFormTitle(\"Create knowledge\");setKnowledgeName(\"\");console.log(\"Create knowledge\");}if(description){setDescriptionKnowledge(description);}else{setDescriptionKnowledge(\"\");}},[title,description]);const handleChooseFile=()=>{fileInputRef.current.click();};const uploadDocument=e=>{const files=e.target.files;setFiles(prevFiles=>[...prevFiles,...files]);};const handleFileRemove=indexToRemove=>{setFiles(files.filter((_,index)=>index!==indexToRemove));};return/*#__PURE__*/_jsx(\"div\",{className:\"overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"new_bot__modal \",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title_form\",children:formTitle}),/*#__PURE__*/_jsxs(\"form\",{className:\"new_bot__modal-body\",children:[/*#__PURE__*/_jsx(InputModal,{currentLength:knowledgeName.length,value:knowledgeName,onChangeInput:setKnowledgeName,label:\"Name\",placeHolder:\"Dataset name cannot be empty\",maxLength:100}),/*#__PURE__*/_jsx(TextAreaModal,{value:descriptionKnowledge,currentLength:descriptionKnowledge.length,onChangeInput:setDescriptionKnowledge,label:\"Bot function description\",placeHolder:\"Enter the content of the dataset\",maxLength:2000})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new_bot__modal-footer\",children:[/*#__PURE__*/_jsx(TextButtonIcon,{title:\"Cancel\",onPress:toggleShow,background:\"#FFFFFF\",color:\"#1C1C1C\"}),/*#__PURE__*/_jsx(TextButtonIcon,{title:\"Confirm\",onPress:()=>confirm(knowledgeName,descriptionKnowledge,knowledgeId)})]})]})});}","map":{"version":3,"names":["InputModal","TextAreaModal","TextButtonIcon","useEffect","useRef","useState","jsx","_jsx","jsxs","_jsxs","KnowledgeModal","_ref","knowledgeId","titleForm","toggleShow","confirm","title","description","knowledgeName","setKnowledgeName","descriptionKnowledge","setDescriptionKnowledge","fileInputRef","files","setFiles","formTitle","setFormTitle","console","log","handleChooseFile","current","click","uploadDocument","e","target","prevFiles","handleFileRemove","indexToRemove","filter","_","index","className","children","currentLength","length","value","onChangeInput","label","placeHolder","maxLength","onPress","background","color"],"sources":["/Users/huudan/Development/chatbot.com/fe/src/components/knowledge_modal/KnowledgeModal.js"],"sourcesContent":["import InputModal from \"../input_modal/InputModal\";\nimport TextAreaModal from \"../textarea_modal/TextAreaModal\";\nimport TextButtonIcon from \"../icon_text_button/TextButtonIcon\";\nimport {useEffect, useRef, useState} from \"react\";\nimport \"./KnowledgeModal.scss\"\n\nexport default function KnowledgeModal({knowledgeId,titleForm,toggleShow, confirm, title, description}) {\n    const [knowledgeName, setKnowledgeName] = useState(title);\n    const [descriptionKnowledge, setDescriptionKnowledge] = useState(description);\n    const fileInputRef = useRef(null);\n    const [files, setFiles] = useState([]);\n    const [formTitle, setFormTitle] = useState(\"Create knowledge\");\n    useEffect(() => {\n        if (title) {\n            setKnowledgeName(title);\n            setFormTitle(\"Edit knowledge\")\n            console.log(\"Edit knowledge\");\n        }else{\n            setFormTitle(\"Create knowledge\")\n            setKnowledgeName(\"\");\n            console.log(\"Create knowledge\");\n        }\n        if (description) {\n            setDescriptionKnowledge(description);\n        }else{\n            setDescriptionKnowledge(\"\");\n        }\n    }, [title, description]);\n    const handleChooseFile = () => {\n        fileInputRef.current.click();\n    };\n    const uploadDocument = (e) => {\n        const files = e.target.files;\n        setFiles(prevFiles => [...prevFiles, ...files]);\n    }\n    const handleFileRemove = (indexToRemove) => {\n        setFiles(files.filter((_, index) => index !== indexToRemove));\n    };\n    return(\n        <div className=\"overlay\">\n            <div className=\"new_bot__modal \">\n                <h2 className=\"title_form\">{formTitle}</h2>\n                <form className={\"new_bot__modal-body\"}>\n                    <InputModal currentLength={knowledgeName.length} value={knowledgeName} onChangeInput={setKnowledgeName} label={\"Name\"} placeHolder={\"Dataset name cannot be empty\"} maxLength={100}/>\n                    <TextAreaModal value={descriptionKnowledge} currentLength={descriptionKnowledge.length} onChangeInput={setDescriptionKnowledge} label={\"Bot function description\"} placeHolder={\"Enter the content of the dataset\"} maxLength={2000}/>\n                    {/*{formTitle == \"Create knowledge\" && <div className={\"form-field\"}>*/}\n                    {/*    <label className={\"label\"}>Upload</label>*/}\n                    {/*    <div className=\"input__wrapper\">*/}\n                    {/*        <input className={\"input_file\"} onChange={uploadDocument} type={\"file\"} ref={fileInputRef} multiple/>*/}\n                    {/*        <div onClick={handleChooseFile} className=\"upload\">*/}\n                    {/*            <i className=\"bi bi-cloud-arrow-up-fill\"></i>*/}\n                    {/*            <span className=\"input-title\">Click to upload</span>*/}\n                    {/*            <span className=\"input-sub\">Up load format TXT, DOC, PDF</span>*/}\n                    {/*        </div>*/}\n                    {/*    </div>*/}\n                    {/*    <div className=\"files_container\">*/}\n                    {/*        {files.map((file, index)=><FileItem fileName={file.name} deleteFile={()=>handleFileRemove(index)}/>)}*/}\n                    {/*    </div>*/}\n                    {/*</div>*/}\n                    {/*}*/}\n                </form>\n                <div className=\"new_bot__modal-footer\">\n                    <TextButtonIcon title={\"Cancel\"} onPress={toggleShow} background={\"#FFFFFF\"} color={\"#1C1C1C\"}/>\n                    <TextButtonIcon title={\"Confirm\"} onPress={()=>confirm(knowledgeName, descriptionKnowledge, knowledgeId)}/>\n                </div>\n            </div>\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}